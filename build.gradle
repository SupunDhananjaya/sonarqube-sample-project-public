plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "5.1.0.4882"
	id 'jacoco'
	id 'org.ajoberstar.grgit' version "5.0.0-rc.3"
}

group = 'com.sonar-testing'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jacocoTestReport {
	reports {
		xml.required.set(true)
		html.destination file("${layout.buildDirectory.get()}/reports/coverage")
		xml.destination file("${layout.buildDirectory.get()}/reports/jacoco.xml")
	}
}

sonar {
	properties {
		property "sonar.projectKey", "<projectKey>"
		property "sonar.organization", "<organization>"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "${layout.buildDirectory.get()}/reports/jacoco.xml"
		property 'sonar.branch.name', grgit.branch.current().name
		property 'sonar.coverage.exclusions', "*/**/sonarqube_sample_project/config/*,*/**/sonarqube_sample_project/*"
		property 'sonar.exclusions', "*/**/sonarqube_sample_project/config/*"
	}
}

tasks.sonar.dependsOn test

test {
	finalizedBy jacocoTestReport
	useJUnitPlatform()
}
